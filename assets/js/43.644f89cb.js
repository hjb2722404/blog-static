(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{207:function(s,a,t){"use strict";t.r(a);var l=t(0),n=Object(l.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("div",{staticClass:"content"},[t("p",[s._v(".container与.container_fluid是bootstrap中的两种不同类型的外层容器，按照官方的说法，这两者的区别是：")]),s._v(" "),t("blockquote",[s._v("\n  .container 类用于固定宽度并支持响应式布局的容器。\n"),t("p",[s._v(".container-fluid 类用于 100% 宽度，占据全部视口（viewport）的容器。\n")])]),t("p"),s._v(" "),t("p",[s._v("一开始，我以为所谓固定宽度是开发者可以设置该容器为固定宽度，所以我采用了如下布局样式：")]),s._v(" "),t("pre",{staticClass:"prettyprint"},[t("span",{staticClass:"hljs-tag"},[s._v("<"),t("span",{staticClass:"hljs-title"},[s._v("body")]),s._v(">")]),s._v("\n\n    "),t("span",{staticClass:"hljs-tag"},[s._v("<"),t("span",{staticClass:"hljs-title"},[s._v("div")]),s._v(" "),t("span",{staticClass:"hljs-attribute"},[s._v("class")]),s._v("="),t("span",{staticClass:"hljs-value"},[s._v('"container"')]),s._v(" "),t("span",{staticClass:"hljs-attribute"},[s._v("style")]),s._v("="),t("span",{staticClass:"hljs-value"},[s._v('"width: 800px"')]),s._v(" >")]),s._v("\n\n        "),t("span",{staticClass:"hljs-tag"},[s._v("<"),t("span",{staticClass:"hljs-title"},[s._v("div")]),s._v(" "),t("span",{staticClass:"hljs-attribute"},[s._v("class")]),s._v("="),t("span",{staticClass:"hljs-value"},[s._v('"col-md-6"')]),s._v(">")]),s._v("\n\n            "),t("span",{staticClass:"hljs-tag"},[s._v("<"),t("span",{staticClass:"hljs-title"},[s._v("p")]),s._v(">")]),s._v("官方解释container容器用于固定宽度并且能够自适应布局，我现在给外层应用了container类的div设置一个固定宽度800px，用来测试是否能实现自适应"),t("span",{staticClass:"hljs-tag"},[s._v("</"),t("span",{staticClass:"hljs-title"},[s._v("p")]),s._v(">")]),s._v("\n\n        "),t("span",{staticClass:"hljs-tag"},[s._v("</"),t("span",{staticClass:"hljs-title"},[s._v("div")]),s._v(">")]),s._v("\n\n        "),t("span",{staticClass:"hljs-tag"},[s._v("<"),t("span",{staticClass:"hljs-title"},[s._v("div")]),s._v(" "),t("span",{staticClass:"hljs-attribute"},[s._v("class")]),s._v("="),t("span",{staticClass:"hljs-value"},[s._v('"col-md-6"')]),s._v(">")]),s._v("\n            "),t("span",{staticClass:"hljs-tag"},[s._v("<"),t("span",{staticClass:"hljs-title"},[s._v("img")]),s._v(" "),t("span",{staticClass:"hljs-attribute"},[s._v("src")]),s._v("="),t("span",{staticClass:"hljs-value"},[s._v('"image/QQ截图20150423144403.png"')]),s._v(" "),t("span",{staticClass:"hljs-attribute"},[s._v("alt")]),s._v("="),t("span",{staticClass:"hljs-value"},[s._v('""')]),s._v(" "),t("span",{staticClass:"hljs-attribute"},[s._v("style")]),s._v("="),t("span",{staticClass:"hljs-value"},[s._v('"width:100%;"')]),s._v("/>")]),s._v("\n        "),t("span",{staticClass:"hljs-tag"},[s._v("</"),t("span",{staticClass:"hljs-title"},[s._v("div")]),s._v(">")]),s._v("\n\n    "),t("span",{staticClass:"hljs-tag"},[s._v("</"),t("span",{staticClass:"hljs-title"},[s._v("div")]),s._v(">")]),s._v("\n\n\n\n"),t("span",{staticClass:"hljs-tag"},[s._v("</"),t("span",{staticClass:"hljs-title"},[s._v("body")]),s._v(">")]),s._v("\n")]),s._v(" "),t("p",[s._v("当我这样做了以后，我发现，缩小浏览器宽度到小于800px的值时，内容不再自适应了，所以，我调出了调试台，看了bootstrap.css中对.container的定义：")]),s._v(" "),t("pre",{staticClass:"prettyprint"},[t("span",{staticClass:"hljs-class"},[s._v(".container")]),t("span",{staticClass:"hljs-rules"},[s._v("{\n    "),t("span",{staticClass:"hljs-rule"},[t("span",{staticClass:"hljs-attribute"},[s._v("padding-right")]),s._v(":"),t("span",{staticClass:"hljs-value"},[t("span",{staticClass:"hljs-number"},[s._v("15")]),s._v("px")])]),s._v(";\n    "),t("span",{staticClass:"hljs-rule"},[t("span",{staticClass:"hljs-attribute"},[s._v("padding-left")]),s._v(":"),t("span",{staticClass:"hljs-value"},[t("span",{staticClass:"hljs-number"},[s._v("15")]),s._v("px")])]),s._v(";\n    "),t("span",{staticClass:"hljs-rule"},[t("span",{staticClass:"hljs-attribute"},[s._v("margin-right")]),s._v(":"),t("span",{staticClass:"hljs-value"},[s._v("auto")])]),s._v(";\n    "),t("span",{staticClass:"hljs-rule"},[t("span",{staticClass:"hljs-attribute"},[s._v("margin-left")]),s._v(":"),t("span",{staticClass:"hljs-value"},[s._v("auto\n")])])]),s._v("}\n\n"),t("span",{staticClass:"hljs-at_rule"},[s._v("@"),t("span",{staticClass:"hljs-keyword"},[s._v("media")]),s._v(" (min-width:"),t("span",{staticClass:"hljs-number"},[s._v("768")]),s._v("px)")]),s._v("{\n    "),t("span",{staticClass:"hljs-class"},[s._v(".container")]),t("span",{staticClass:"hljs-rules"},[s._v("{\n        "),t("span",{staticClass:"hljs-rule"},[t("span",{staticClass:"hljs-attribute"},[s._v("width")]),s._v(":"),t("span",{staticClass:"hljs-value"},[t("span",{staticClass:"hljs-number"},[s._v("750")]),s._v("px\n    ")])])]),s._v("}\n\n}\n\n"),t("span",{staticClass:"hljs-at_rule"},[s._v("@"),t("span",{staticClass:"hljs-keyword"},[s._v("media")]),s._v(" (min-width:"),t("span",{staticClass:"hljs-number"},[s._v("992")]),s._v("px)")]),s._v("{\n    "),t("span",{staticClass:"hljs-class"},[s._v(".container")]),t("span",{staticClass:"hljs-rules"},[s._v("{\n        "),t("span",{staticClass:"hljs-rule"},[t("span",{staticClass:"hljs-attribute"},[s._v("width")]),s._v(":"),t("span",{staticClass:"hljs-value"},[t("span",{staticClass:"hljs-number"},[s._v("970")]),s._v("px\n    ")])])]),s._v("}\n\n}\n\n"),t("span",{staticClass:"hljs-at_rule"},[s._v("@"),t("span",{staticClass:"hljs-keyword"},[s._v("media")]),s._v(" (min-width:"),t("span",{staticClass:"hljs-number"},[s._v("1200")]),s._v("px)")]),s._v("{\n    "),t("span",{staticClass:"hljs-class"},[s._v(".container")]),t("span",{staticClass:"hljs-rules"},[s._v("{\n        "),t("span",{staticClass:"hljs-rule"},[t("span",{staticClass:"hljs-attribute"},[s._v("width")]),s._v(":"),t("span",{staticClass:"hljs-value"},[t("span",{staticClass:"hljs-number"},[s._v("1170")]),s._v("px\n    ")])])]),s._v("}\n\n}")]),s._v(" "),t("p",[s._v("我忽然明白，所谓固定宽度并不是允许开发者自己设置容器的宽度，而是bootstrap内部根据屏幕宽度利用媒体查询，帮我们设置了固定宽度，并且是能够自适应的。")]),s._v(" "),t("p",[s._v("所以，无论何种情况下，请不要手动为响应式布局中的外层布局容器设置固定宽度值。")]),s._v(" "),t("p",[s._v("那么，.container-fluid，又是怎样的呢？")]),s._v(" "),t("p",[s._v("根据测试，.container-fluid自动设置为外层视窗的100%，如果外层视窗为body，那么它将全屏显示，无论屏幕大小，并且自动实现响应式布局。")])])}],!1,null,null,null);n.options.__file="2016-05-31-bootstrap3中container与container_fluid容器的区别.md";a.default=n.exports}}]);