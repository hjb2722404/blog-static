(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{241:function(t,s,i){"use strict";i.r(s);var _=i(0),v=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("div",{staticClass:"content"},[i("p",[t._v("关于git是什么（版本控制系统）,网上有很多文章我就不记录了，这篇笔记针对的是已经很清楚版本控制系统是什么，并已经决定使用版本控制系统来管理自己的代码却还对git的使用有些陌生的朋友。")]),t._v(" "),i("p",[t._v("1、首先，无论你使用的是windows系统还是linux系统，你当然得在自己的机器上安装一个git的客户端，至于安装方法，我也不赘述了。")]),t._v(" "),i("p",[t._v("2、现在，假设你已经安装好了git的客户端，那么好，你首先要做三件事：")]),t._v(" "),i("p",[t._v("第一，你要把git的安装目录的路径添加到系统环境变量中的PATH里，至于怎么添加，win系统和Lin系统方法不一样，请自行搜索方法；")]),t._v(" "),i("p",[t._v("第二，你得去github官方网站申请一个账号。对，我默认大多数人将自己的代码保管在github上，而不是别的什么地方。")]),t._v(" "),i("p",[t._v("第三，你得创建一对公钥/私钥，并将创建的公钥填写到github网站个人设置页面的SSH-key一栏下新建的ssh-key里面，本地创建公钥私钥你可以使用以下命令：")]),t._v(" "),i("pre",{staticClass:"prettyprint"},[t._v("ssh\nssh"),i("span",{staticClass:"hljs-attribute"},[t._v("-keygen")])]),t._v(" "),i("p",[t._v("一路回车，当公钥/私钥创建成功后，控制台里会告诉你他们存放在什么位置，你到该目录里找到这两个文件，并使用文本编辑器打开公钥文件（文件名里带pub的就是），全选复制其中的内容，然后粘贴到上面所说的github网站的ssh-key里面。")]),t._v(" "),i("p",[t._v("这样，准备工作就结束了。")]),t._v(" "),i("p",[t._v("3、现在，你在公司的计算机上写了一些代码文件，将要下班了，你要将这些文件或整个目录的文件都放到github上去，以便你回家换了另外一台机器后可以通过网络直接从仓库里取出代码来继续编程。")]),t._v(" "),i("p",[t._v("那么，你首先要登陆github，创建一个新的仓库newpro（此处的名字可以随便起），然后，在控制台中切换到你想要上传的文件所在的文件夹或想要上传的目录的上层目录，然后在本地创建一个新的git仓库，你可以使用下面的命令：")]),t._v(" "),i("pre",{staticClass:"prettyprint"},[t._v("git init\n")]),t._v(" "),i("p",[t._v("没错，就这么简单，你的这个本地目录已经被创建出了一个git版本库。")]),t._v(" "),i("p",[t._v("4、然后，你就要进行操作，将这些文件或这个目录同步到远程仓库去，你可以使用以下命令：")]),t._v(" "),i("pre",{staticClass:"prettyprint"},[t._v("git "),i("span",{staticClass:"hljs-built_in"},[t._v("add")]),t._v("  filename "),i("span",{staticClass:"hljs-comment"},[t._v(" //当你上传的是文件时，可以连续add多个文件")]),t._v("\n\ngit "),i("span",{staticClass:"hljs-built_in"},[t._v("add")]),t._v(" pathname"),i("span",{staticClass:"hljs-comment"},[t._v(" //当你要上传的是目录时")])]),t._v(" "),i("p",[t._v("这时，你的文件或目录就被添加到了"),i("strong",[t._v("本地版本库的待上传队列中")]),t._v("，你通过以下命令才能将他们提交到"),i("strong",[t._v("本地版本库")]),t._v("：")]),t._v(" "),i("pre",{staticClass:"prettyprint"},[t._v("git "),i("span",{staticClass:"hljs-operator"},[i("span",{staticClass:"hljs-keyword"},[t._v("commit")]),t._v(" -m "),i("span",{staticClass:"hljs-string"},[t._v('"这里是本次提交相关的备注信息或说明"')])])]),t._v(" "),i("p",[t._v("5、接下来，是"),i("strong",[t._v("与github上的远程仓库进行关联")]),t._v("：")]),t._v(" "),i("pre",{staticClass:"prettyprint"},[t._v("$ git remote "),i("span",{staticClass:"hljs-keyword"},[t._v("add")]),t._v(" origin git@github"),i("span",{staticClass:"hljs-preprocessor"},[t._v(".com")]),t._v(":username/newpro"),i("span",{staticClass:"hljs-preprocessor"},[t._v(".git")])]),t._v(" "),i("p",[t._v("需要注意的是，命令中的username 是你在github上的用户名，而newpro就是你刚刚在github上创建的新仓库名")]),t._v(" "),i("p",[t._v("然后，才是同步，即"),i("strong",[t._v("将本地仓库的内容推送到远程仓库")]),t._v("：")]),t._v(" "),i("pre",{staticClass:"prettyprint"},[i("span",{staticClass:"hljs-variable"},[t._v("$ ")]),t._v("git push -u origin master")]),t._v(" "),i("p",[t._v("记住："),i("strong",[t._v("只有第一次向一个远程的空仓库推送分支时才加参数 -u，这之后再向这同一个仓库推送分支，则再不用加此参数")])]),t._v(" "),i("p",[t._v("到此为止，我们就第一次使用了git并创建了远程仓库，还完成了同步，现在可以关闭计算机，回家吃饭了。")]),t._v(" "),i("p",[t._v("吃完饭，你打算修改或继续完成白天没有完成的工作，那么，你需要在家里的计算机上继续操作，现在，就需要用到git的clone功能了。")]),t._v(" "),i("p",[t._v("打开家里的计算机（与之前的不是同一台），完成准备工作，即上文提到的1-2步（这次只需登陆github，无需重新注册），然后，你同样需要使用命令行切换到你在该台计算机上的工作目录，执行第3步中的命令。")]),t._v(" "),i("p",[t._v("然后，你就可以敲入以下命令来把你需要的文件从远程仓库取到本地来：")]),t._v(" "),i("pre",{staticClass:"prettyprint"},[i("span",{staticClass:"hljs-variable"},[t._v("$ ")]),t._v("git clone git"),i("span",{staticClass:"hljs-variable"},[t._v("@github")]),t._v("."),i("span",{staticClass:"hljs-symbol"},[t._v("com:")]),t._v("username/newpro.git")]),t._v(" "),i("p",[t._v("现在，切换到工作目录中，你是不是发现了你之前上传到远程仓库的那些文件，好了，开始工作吧，工作结束，按照上文4-5步再做一遍，就可以安心的睡觉去了，明天到公司就可以继续工作了。")])])}],!1,null,null,null);v.options.__file="2016-05-31-git学习笔记1.md";s.default=v.exports}}]);